# Copyright 2017-2019 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

STORAGE_COPY_SOURCE=$1
STORAGE_COPY_TARGET=$2
STORAGE_COPY_ATTEMPTS=$3
STORAGE_COPY_MODE=$4
STORAGE_COPY_RULES=$5

# Check input variables
if [ -z "$STORAGE_COPY_SOURCE" ]
then
    echo "[ERROR] Copy source is not set"
	exit 1
fi

if [ -z "$STORAGE_COPY_TARGET" ]
then
    echo "[ERROR] Copy target is not set"
	exit 1
fi

if [ -z "$STORAGE_COPY_ATTEMPTS" ]
then
    echo "[WARN] Copy attempts count is not set. Using default 3"
	STORAGE_COPY_ATTEMPTS=3
fi

if [ -z "$STORAGE_COPY_MODE" ]
then
    echo "[WARN] Copy mode is not set. Using default COPY mode"
	STORAGE_COPY_MODE="COPY"
fi

# CP_USE_PIPE_FOR_CP determines which tool will be used for copying. If this option is not specified the aws-cli will be used;
# otherwise - pipe-cli.
if [ -z "$CP_USE_PIPE_FOR_CP" ]
then
    if [ "$STORAGE_COPY_MODE" == "SYNC" ]
    then
        if [ -z "$STORAGE_COPY_RULES" ]
        then
            API_METHOD_NAME="sync_s3"
        else
            API_METHOD_NAME="sync_s3_with_rules"
            STORAGE_COPY_RULES_PARAM=", \"${STORAGE_COPY_RULES}\""
        fi
    else
        if [ ! -z "$STORAGE_COPY_RULES" ]
        then
            echo "[WARN] Current mode is set to COPY. Storage rules file ${STORAGE_COPY_RULES} is ignored"
        fi
        API_METHOD_NAME="copy_s3"
    fi
else
    if [ -z "$STORAGE_COPY_RULES" ]
    then
        API_METHOD_NAME="pipe_copy"
    else
        API_METHOD_NAME="pipe_copy_with_rules"
        STORAGE_COPY_RULES_PARAM=", \"${STORAGE_COPY_RULES}\""
    fi
fi

COPY_COMMAND="storage.${API_METHOD_NAME}(\"${STORAGE_COPY_SOURCE}\", \"${STORAGE_COPY_TARGET}\", ${STORAGE_COPY_ATTEMPTS} ${STORAGE_COPY_RULES_PARAM})"

# Call storage API
CMD="import pipeline.storage; storage=pipeline.storage.S3Bucket(); ${COPY_COMMAND}"
$CP_PYTHON2_PATH -c "$CMD"
result=$?

exit $result
