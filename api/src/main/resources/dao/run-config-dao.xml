<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017-2019 EPAM Systems, Inc. (https://www.epam.com/)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean class="com.epam.pipeline.dao.configuration.RunConfigurationDao" id="runConfigurationDao" autowire="byName">
        <property name="configSequence" value="pipeline.s_configuration"/>
        <property name="createConfigQuery">
            <value>
                <![CDATA[
                    INSERT INTO pipeline.configuration (
                        id,
                        name,
                        description,
                        folder_id,
                        created_date,
                        owner,
                        entries,
                        locked)
                    VALUES (
                        :CONFIG_ID,
                        :CONFIG_NAME,
                        :CONFIG_DESCRIPTION,
                        :CONFIG_FOLDER_ID,
                        :CONFIG_CREATED_DATE,
                        :CONFIG_OWNER,
                        :CONFIG_ENTRIES,
                        :CONFIG_LOCKED)
                ]]>
            </value>
        </property>
        <property name="updateConfigQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.configuration SET
                        name = :CONFIG_NAME,
                        description = :CONFIG_DESCRIPTION,
                        folder_id = :CONFIG_FOLDER_ID,
                        owner = :CONFIG_OWNER,
                        entries = :CONFIG_ENTRIES
                    WHERE
                        id = :CONFIG_ID
                ]]>
            </value>
        </property>
        <property name="deleteConfigQuery">
            <value>
                <![CDATA[
                    DELETE FROM pipeline.configuration WHERE id = ?
                ]]>
            </value>
        </property>
        <property name="loadConfigQuery">
            <value>
                <![CDATA[
                    SELECT
                        c.id as config_id,
                        c.folder_id as config_folder_id,
                        c.description as config_description,
                        c.name as config_name,
                        c.created_date as config_created_date,
                        c.owner as config_owner,
                        c.entries as config_entries,
                        c.locked as config_locked
                    FROM pipeline.configuration c
                    WHERE c.id = ?
                ]]>
            </value>
        </property>
        <property name="loadAllConfigsQuery">
            <value>
                <![CDATA[
                    SELECT
                        c.id as config_id,
                        c.folder_id as config_folder_id,
                        c.description as config_description,
                        c.name as config_name,
                        c.created_date as config_created_date,
                        c.owner as config_owner,
                        c.entries as config_entries,
                        c.locked as config_locked
                    FROM pipeline.configuration c
                ]]>
            </value>
        </property>
        <property name="loadConfigurationWithParentsQuery">
            <value>
                <![CDATA[
                    WITH RECURSIVE children AS (
	                    SELECT
	                        c.id AS config_id,
                            c.folder_id AS config_folder_id,
                            c.description AS config_description,
                            c.name AS config_name,
                            c.created_date AS config_created_date,
                            c.owner AS config_owner,
                            c.entries AS config_entries,
                            c.locked AS config_locked,
						    f.folder_id AS folder_id,
                            f.parent_id AS parent_folder_id
                        FROM pipeline.configuration c
		                LEFT JOIN pipeline.folder f ON c.folder_id = f.folder_id
	                    WHERE c.id = ?
	                    UNION
	                    SELECT
		                    null AS config_id,
		                    null AS config_folder_id,
		                    null AS config_description,
                            null AS config_name,
                            null AS config_created_date,
                            null AS config_owner,
                            null AS config_entries,
                            null AS config_locked,
		                    m.folder_id AS folder_id,
                            m.parent_id AS parent_folder_id
	                    FROM pipeline.folder m
	                    INNER JOIN children t ON t.parent_folder_id = m.folder_id
	                ) SELECT * FROM children;
                ]]>
            </value>
        </property>
        <property name="loadAllRootConfigsQuery">
            <value>
                <![CDATA[
                    SELECT
                        c.id as config_id,
                        c.folder_id as config_folder_id,
                        c.description as config_description,
                        c.name as config_name,
                        c.created_date as config_created_date,
                        c.owner as config_owner,
                        c.entries as config_entries,
                        c.locked as config_locked
                    FROM pipeline.configuration c
                    WHERE c.folder_id ISNULL
                ]]>
            </value>
        </property>
        <property name="updateConfigLocksQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.configuration SET
                        locked = :LOCKED
                    WHERE
                        id IN (:IDS)
                ]]>
            </value>
        </property>
    </bean>
</beans>
